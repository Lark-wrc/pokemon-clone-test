#BlueJ class context
comment0.params=dexNumber\ lv
comment0.target=Pokemon(int,\ int)
comment0.text=\n\ Creates\ a\ pokemon\ object.\ The\ constructor\ will\n\ create\ a\ pokedex\ object,\ then\ use\ the\ two\n\ parameters\ to\ generate\ a\ pokemon\ from\ the\ stats\n\ obtained\ from\ the\ pokedex.\ All\ values\ will\ be\n\ filled\ at\ the\ end\ of\ the\ constructor.\ \n\ \n\ @param\ dexNumber\ pokedex\ number\ of\ the\ pokemon\ to\ create.\n\ @param\ lv\ level\ of\ the\ pokemon\ to\ create.\n
comment1.params=
comment1.target=int[]\ genIVs()
comment1.text=\n\ Generates\ Indiviual\ values\ for\ the\ pokemon\ randomly.\n\ This\ method\ creates\ the\ unique\ IV\ values\ for\ the\n\ pokemon.\ It\ is\ only\ called\ in\ construction.\n\ \n\ @return\ \ The\ indiviual\ values\ in\ an\ int[]\n
comment10.params=
comment10.target=int\ getCurrentHP()
comment10.text=\n\ Accessor\ for\ the\ pokemon's\ current\ HP.\n\ \n\ @return\ integer\ of\ the\ pokemon's\ current\ health.\n
comment11.params=move
comment11.target=int\ getPP(int)
comment11.text=\n\ Accessor\ for\ the\ PP\ of\ a\ pokemon's\ move.\n\ This\ is\ a\ chain\ method,\ only\ used\ when\ a\ method\n\ can't\ access\ the\ move\ itself.\ \n\ \n\ @param\ move\ The\ int\ index\ of\ the\ move\ in\ the\ moves[]\n\ @return\ the\ int\ PP\ of\ the\ specifed\ move.\n
comment12.params=ne
comment12.target=void\ setHP(int)
comment12.text=\n\ Mutator\ to\ change\ a\ pokemon's\ currentHP\ value.\n\ \n\ @param\ ne\ New\ HP\ int\ value.\n
comment13.params=y
comment13.target=void\ minusPP(int)
comment13.text=\n\ Mutator\ to\ subtract\ one\ from\ the\ PP\ of\ a\ move.\n\ This\ is\ a\ chain\ method,\ only\ used\ when\ a\ method\n\ can't\ access\ the\ move\ itself.\n\ \n\ @param\ y\ The\ int\ index\ of\ the\ move\ in\ moves[]\n
comment14.params=nickname
comment14.target=void\ nickname(java.lang.String)
comment14.text=\n\ Mutator\ to\ set\ a\ pokemon's\ nickname.\n\ This\ method\ isn't\ called\ in\ the\ constructor,\ or\ \n\ anywhere\ in\ battle.\ It's\ useless\ now,\ but\ \n\ is\ here\ anyway.\ It\ will\ be\ used\ on\ capture,\n\ if\ that's\ ever\ implemented.\n\ \n\ @param\ nickname\ The\ String\ nickname\ the\ user\ gives.\n
comment15.params=i\ v
comment15.target=void\ setStat(java.lang.String,\ int)
comment15.text=\n\ Mutator\ to\ change\ a\ pokemon's\ stat\ manually.\n\ This\ method\ is\ used\ for\ stat\ damage\ moves.\ It\ shouldn't\n\ be\ called\ for\ leveling\ up.\n\ \n\ @param\ i\ String\ name\ of\ the\ stat\ to\ modify.\n\ @param\ v\ The\ int\ amount\ to\ modify\ the\ stat\ to.\n
comment2.params=
comment2.target=int[]\ genStats()
comment2.text=\n\ Generate\ the\ stat\ values\ using\ IVs,\ EVs,\ and\ base\ stats.\n\ This\ method\ calculates\ the\ pokemons\ stats,\ which\ happens\n\ on\ construction\ as\ well\ as\ when\ the\ pokemon\ levels.\n\ calculations\ are\ done\ as\ doubles\ in\ the\ method.\ \n\ \n\ note\:\ while\ this\ class\ could\ be\ in\ the\ Cal\ class,\ it's\n\ here\ due\ to\ the\ number\ of\ variables\ required\ to\ move\ as\n\ well\ as\ the\ cal\ class\ wasn't\ written\ till\ this\ was\ already\n\ implemented.\n\ \n\ @return\ \ int[]\ of\ the\ generated\ stats\ of\ the\ pokemon\n
comment3.params=
comment3.target=void\ levelup()
comment3.text=\n\ Calls\ the\ required\ methods\ and\ does\ the\ math\ to\ increase\n\ the\ pokemon's\ level.\ \n\ \n\ FLAG\:\:\ UNIMPLEMENTED\n
comment4.params=
comment4.target=void\ populateMoveList()
comment4.text=\n\ Populates\ the\ pokemon's\ current\ moves\ with\ the\ highest\n\ moves\ available\ to\ it.\ It\ uses\ the\ moveList\ hashmap\ \n\ from\ the\ pokedex\ class\ to\ build\ an\ array\ of\ moves\ \n\ currently\ learned,\ for\ accessablity.\n\ \n\ FLAG\:\:\ This\ can\ technically\ leave\ a\ pokemon\ with\ no\ \n\ attack\ moves.\ This\ needs\ to\ be\ fixed,\ or\ proven\ possible\n\ in\ the\ original.\n
comment5.params=
comment5.target=java.lang.String\ getName()
comment5.text=\n\ Accessor\ for\ the\ name\ of\ the\ pokemon.\ If\ the\ pokemon\n\ has\ a\ nickname,\ that\ is\ returned\ instead.\n\ \n\ @return\ String\ name,\ or\ nickname,\ of\ the\ pokemon.\n
comment6.params=
comment6.target=java.lang.String\ movesTS()
comment6.text=\n\ Accessor\ for\ a\ toString\ representation\ of\ the\ move\ list.\n\ \n\ FLAG\:\:\ This\ is\ currently\ unused.\ It\ got\ reworked\ for\ UI\n\ purposes.\ That\ section\ can\ either\ be\ rewritten\ \n\ (if\ neccessary)\ or\ this\ can\ be\ removed.\ It's\ still\ here\n\ because\ it\ may\ be\ useful\ in\ the\ game\ functions.\n\ \n\ @return\ String\ representation\ of\ the\ moves[]\n
comment7.params=
comment7.target=Move[]\ getMoves()
comment7.text=\n\ Accessor\ for\ the\ move[]\ of\ the\ pokemon.\n\ \n\ @return\ The\ pokemon's\ move[]\n
comment8.params=i
comment8.target=int\ getStat(java.lang.String)
comment8.text=\n\ Multi\ Accessor\ for\ the\ stats\ of\ a\ pokemon.\n\ \n\ note\:\ This\ is\ an\ experiment,\ condensing\ the\ number\ \n\ of\ accessors\ in\ the\ class\ by\ providing\ a\ search\n\ parameter.\ It\ works,\ as\ of\ 0.1.\n\ \n\ @param\ i\ stat\ to\ be\ returned.\n\ @return\ The\ integer\ stat\ value.\n
comment9.params=
comment9.target=int\ getLevel()
comment9.text=\n\ Accessor\ for\ the\ level\ of\ the\ pokemon.\n\ \n\ @return\ Int\ of\ the\ pokemons\ level\n
numComments=16
